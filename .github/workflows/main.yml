name: Operator CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.3

    - name: Cache Go dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test
      run: |
        go mod tidy
        make generate
        make manifests

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.3

    - name: Cache Go dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        make docker-build docker-push

    - name: Save Docker image
      run: |
        IMAGE_NAME=2000rosser/controller
        IMAGE_TAG=latest
        docker save $IMAGE_NAME:$IMAGE_TAG > image.tar

    - name: Upload Docker image
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: image.tar

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.3

    - name: Cache Go dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download Docker image
      uses: actions/download-artifact@v2
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: |
        docker load < image.tar

    - name: Install kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind
        sudo mv kind /usr/local/bin/

    - name: Create Kubernetes cluster
      run: |
        kind create cluster

    - name: Load Docker image into cluster
      run: |
        kind load docker-image 2000rosser/controller:latest
    
    - name: Install Prometheus Operator
      run: |
        kubectl create namespace monitoring
        kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.50/bundle.yaml
        sleep 10

    - name: Deploy
      run: make deploy
